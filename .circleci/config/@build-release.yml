version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
          keys:
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b.tar.gz
          key: build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-7262c8da903a7f8ccd943b2cfa56912ddaab3903-{{checksum ".buildcache/cache-keys/package-7262c8da903a7f8ccd943b2cfa56912ddaab3903"}}
          name: Restore package cache
      - restore_cache:
          key: package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158-{{checksum ".buildcache/cache-keys/package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158"}}
          name: Restore package cache
      - restore_cache:
          key: package-8de3ba7578238b9f42633c15ba7085333f9f6774-{{checksum ".buildcache/cache-keys/package-8de3ba7578238b9f42633c15ba7085333f9f6774"}}
          name: Restore package cache
      - restore_cache:
          key: package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7-{{checksum ".buildcache/cache-keys/package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7"}}
          name: Restore package cache
      - restore_cache:
          key: package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb-{{checksum ".buildcache/cache-keys/package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb"}}
          name: Restore package cache
      - restore_cache:
          key: package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870-{{checksum ".buildcache/cache-keys/package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870"}}
          name: Restore package cache
      - restore_cache:
          key: package-eb2aabd038baa4838aced2432d02fbe4f6f66feb-{{checksum ".buildcache/cache-keys/package-eb2aabd038baa4838aced2432d02fbe4f6f66feb"}}
          name: Restore package cache
      - restore_cache:
          key: package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe-{{checksum ".buildcache/cache-keys/package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe"}}
          name: Restore package cache
      - restore_cache:
          key: package-f2554fb308721a32d51fe296fd39663609118c31-{{checksum ".buildcache/cache-keys/package-f2554fb308721a32d51fe296fd39663609118c31"}}
          name: Restore package cache
      - restore_cache:
          key: package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50-{{checksum ".buildcache/cache-keys/package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50"}}
          name: Restore package cache
      - restore_cache:
          key: package-e1680289b4d2ffe1bc73de413c697d30becea441-{{checksum ".buildcache/cache-keys/package-e1680289b4d2ffe1bc73de413c697d30becea441"}}
          name: Restore package cache
      - restore_cache:
          key: package-ff67c96d0db16746100042c0b45e52b63ab854b3-{{checksum ".buildcache/cache-keys/package-ff67c96d0db16746100042c0b45e52b63ab854b3"}}
          name: Restore package cache
      - restore_cache:
          key: package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7-{{checksum ".buildcache/cache-keys/package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7"}}
          name: Restore package cache
      - restore_cache:
          key: package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee-{{checksum ".buildcache/cache-keys/package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee"}}
          name: Restore package cache
      - restore_cache:
          key: package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a-{{checksum ".buildcache/cache-keys/package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a"}}
          name: Restore package cache
      - restore_cache:
          key: package-0074752b06ac1d044135df1f40cefa4263a6223f-{{checksum ".buildcache/cache-keys/package-0074752b06ac1d044135df1f40cefa4263a6223f"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-8950faafdb560a2.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-8950faafdb560a2.tar.gz .buildcache/packages lockfile-8950faafdb560a2.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-8950faafdb560a2.tar.gz .buildcache/packages/store/*.json lockfile-8950faafdb560a2.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-8950faafdb560a2.yml
      - store_artifacts:
          path: packages-8950faafdb560a2.tar.gz
      - store_artifacts:
          path: meta-8950faafdb560a2.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7262c8da903a7f8ccd943b2cfa56912ddaab3903-{{checksum ".buildcache/cache-keys/package-7262c8da903a7f8ccd943b2cfa56912ddaab3903"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7262c8da903a7f8ccd943b2cfa56912ddaab3903-{{checksum ".buildcache/cache-keys/package-7262c8da903a7f8ccd943b2cfa56912ddaab3903"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7262c8da903a7f8ccd943b2cfa56912ddaab3903
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158-{{checksum ".buildcache/cache-keys/package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158-{{checksum ".buildcache/cache-keys/package-9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9d6b2b793a5d043dbd5f1b5a8f46587c8ff0a158
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8de3ba7578238b9f42633c15ba7085333f9f6774-{{checksum ".buildcache/cache-keys/package-8de3ba7578238b9f42633c15ba7085333f9f6774"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8de3ba7578238b9f42633c15ba7085333f9f6774-{{checksum ".buildcache/cache-keys/package-8de3ba7578238b9f42633c15ba7085333f9f6774"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8de3ba7578238b9f42633c15ba7085333f9f6774
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7-{{checksum ".buildcache/cache-keys/package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7-{{checksum ".buildcache/cache-keys/package-202a2b6e9d86de34e98f1abdd92383eb77bbafb7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 202a2b6e9d86de34e98f1abdd92383eb77bbafb7
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb-{{checksum ".buildcache/cache-keys/package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb-{{checksum ".buildcache/cache-keys/package-9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9044cc2d09d5a92bfa0a4d60d6af7fff8cfbb8cb
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870-{{checksum ".buildcache/cache-keys/package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870-{{checksum ".buildcache/cache-keys/package-820d62e18d0d7812cc3b5beb59bd0f939a2f7870"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 820d62e18d0d7812cc3b5beb59bd0f939a2f7870
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eb2aabd038baa4838aced2432d02fbe4f6f66feb-{{checksum ".buildcache/cache-keys/package-eb2aabd038baa4838aced2432d02fbe4f6f66feb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eb2aabd038baa4838aced2432d02fbe4f6f66feb-{{checksum ".buildcache/cache-keys/package-eb2aabd038baa4838aced2432d02fbe4f6f66feb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eb2aabd038baa4838aced2432d02fbe4f6f66feb
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe-{{checksum ".buildcache/cache-keys/package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe-{{checksum ".buildcache/cache-keys/package-e06fb7d48e897d2445a9d0b1df22a4f7a924febe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e06fb7d48e897d2445a9d0b1df22a4f7a924febe
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f2554fb308721a32d51fe296fd39663609118c31-{{checksum ".buildcache/cache-keys/package-f2554fb308721a32d51fe296fd39663609118c31"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f2554fb308721a32d51fe296fd39663609118c31-{{checksum ".buildcache/cache-keys/package-f2554fb308721a32d51fe296fd39663609118c31"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f2554fb308721a32d51fe296fd39663609118c31
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50-{{checksum ".buildcache/cache-keys/package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50-{{checksum ".buildcache/cache-keys/package-2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2ed64d0ff58c116f2d2df02cc4dbb4d3445c7b50
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e1680289b4d2ffe1bc73de413c697d30becea441-{{checksum ".buildcache/cache-keys/package-e1680289b4d2ffe1bc73de413c697d30becea441"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e1680289b4d2ffe1bc73de413c697d30becea441-{{checksum ".buildcache/cache-keys/package-e1680289b4d2ffe1bc73de413c697d30becea441"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e1680289b4d2ffe1bc73de413c697d30becea441
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ff67c96d0db16746100042c0b45e52b63ab854b3-{{checksum ".buildcache/cache-keys/package-ff67c96d0db16746100042c0b45e52b63ab854b3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ff67c96d0db16746100042c0b45e52b63ab854b3-{{checksum ".buildcache/cache-keys/package-ff67c96d0db16746100042c0b45e52b63ab854b3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ff67c96d0db16746100042c0b45e52b63ab854b3
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7-{{checksum ".buildcache/cache-keys/package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7-{{checksum ".buildcache/cache-keys/package-a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a9c6e2a3b9fd2bb99ab5f24ed84e5ce31f6979b7
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee-{{checksum ".buildcache/cache-keys/package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee-{{checksum ".buildcache/cache-keys/package-7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7d6952d4d9a0d34c0c9c7be04270ec9b6943cdee
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a-{{checksum ".buildcache/cache-keys/package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a-{{checksum ".buildcache/cache-keys/package-3cfdc879c7bf67a20f58893d8f6b052f01f81d7a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3cfdc879c7bf67a20f58893d8f6b052f01f81d7a
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0074752b06ac1d044135df1f40cefa4263a6223f-{{checksum ".buildcache/cache-keys/package-0074752b06ac1d044135df1f40cefa4263a6223f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_d669_{{checksum ".buildcache/cache-keys/copy-source-d669f117018c5dc8f4f21727bf00e84aa111827d"}}
          keys:
            - warm-go-build-vendor-cache_6abc_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-6abc594b685475e3c39e76d2016cdad465927ddc"}}
            - build-static-assets_9605_{{checksum ".buildcache/cache-keys/build-static-assets-960577c14bf434d62a835de559dd0c88e59237b9"}}
            - build-ui_0af4_{{checksum ".buildcache/cache-keys/build-ui-0af407f3f3222f6e53c52471390d27d06ec8ec6b"}}
            - ui-dependencies_ff40_{{checksum ".buildcache/cache-keys/ui-dependencies-ff40e9ce7182c621cdbeab2573030e92696c7fc2"}}
            - install-yarn_f591_{{checksum ".buildcache/cache-keys/install-yarn-f5919890887a28a427799d63f7b4d44af5f5bff7"}}
            - set-workdir_104b_{{checksum ".buildcache/cache-keys/set-workdir-104bbb10e9754bee825e7745f902fb02c6b46dc2"}}
            - install-go-tools_4641_{{checksum ".buildcache/cache-keys/install-go-tools-46410ef86583739a201a0018478fb7f905b27b0f"}}
            - install-go_5bf5_{{checksum ".buildcache/cache-keys/install-go-5bf516a89f55e1e8d577c64c0d74affd2855286b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0074752b06ac1d044135df1f40cefa4263a6223f-{{checksum ".buildcache/cache-keys/package-0074752b06ac1d044135df1f40cefa4263a6223f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0074752b06ac1d044135df1f40cefa4263a6223f
workflows:
  build-8950faafdb560a2:
    jobs:
      - build-common-layers: {}
      - darwin_386_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_386_package
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
